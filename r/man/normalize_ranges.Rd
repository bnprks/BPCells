% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/errorChecking.R
\name{normalize_ranges}
\alias{normalize_ranges}
\title{Normalize an object representing genomic ranges}
\usage{
normalize_ranges(
  ranges,
  metadata_cols = character(0),
  zero_based_coords = !is(ranges, "GRanges"),
  n = 1
)
}
\arguments{
\item{ranges}{Genomic regions given as GRanges, data.frame, or list. See \code{help("genomic-ranges-like")} for details on format and coordinate systems. Required attributes:
\itemize{
\item \code{chr}, \code{start}, \code{end}: genomic position
}}

\item{metadata_cols}{Optional list of metadata columns to require & extract}

\item{zero_based_coords}{If true, coordinates start and 0 and the end coordinate is not included in the range.
If false, coordinates start at 1 and the end coordinate is included in the range}
}
\value{
data frame with zero-based coordinates, and elements chr (factor), start (int), and end (int).
If \code{ranges} does not have chr level information, chr levels are the sorted unique values of chr.

If strand is in metadata_cols, then the output strand element will be TRUE for positive strand,
and FALSE for negative strand. (Converted from a character vector of "+"/"-" if necessary)
}
\description{
Normalize an object representing genomic ranges
}
\examples{
## Prep data
library(S4Vectors)
ranges <- GenomicRanges::GRanges(
  seqnames = Rle(c("chr1", "chr2", "chr3"), c(1, 2, 2)),
  ranges = IRanges::IRanges(101:105, end = 111:115, names = head(letters, 5)),
  strand = Rle(GenomicRanges::strand(c("-", "+", "*")), c(1, 2, 2)),
  score = 1:5,
  GC = seq(1, 0, length=5))
ranges


## Normalize ranges
normalize_ranges(ranges)


## With metadata information
normalize_ranges(ranges, metadata_cols = c("strand", "score", "GC"))
}
