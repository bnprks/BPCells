% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/matrix_pipelines.R
\docType{class}
\name{Transformer}
\alias{Transformer}
\title{PipelineStep representing an operation that transforms data, and holds fitted parameters}
\description{
PipelineStep representing an operation that transforms data, and holds fitted parameters
}
\details{
Transformers represent single operations (derived from the PipelineStep class) that project data from an IterableMatrix to another IterableMatrix/dgCMatrix.
They can be fit to data within an IterableMatrix object, which will be used to hold the fitted parameters.
Using the `project()`` method on a fitted transformer will apply the transformation to the data and return
the projected data as an IterableMatrix object, or a dgCMatrix.

These objects can be combined into a Pipeline object using the \code{c()} function, with other transformers, or estimators.
Transformers can also be combined with full pipelines, to create a new pipeline object.
Derived classes should implement the \code{fit()}, \code{project()}, and \code{short_description()} methods.
}
\section{Slots}{

\describe{
\item{\code{step_name}}{(character) Name of the step}

\item{\code{fitted}}{(logical) Whether the pipeline has been fitted}
}}

