% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/atac_utils.R
\name{call_macs_peaks}
\alias{call_macs_peaks}
\title{Call MACS2/3 peaks using fragments and cluster assignments.
First creates the input bedfiles for each cluster for input to MACS2/3, then runs MACS2/3, and finally reads the outputs into tibbles.
Also can be used to run only one of these steps.}
\usage{
call_macs_peaks(
  fragments = NULL,
  cell_names = NULL,
  genome_size = 2.7e+09,
  path,
  insertion_mode = c("both", "start_only", "end_only"),
  step = c("prep-inputs", "run-macs", "read-outputs", "all"),
  macs_version = c("macs2", "macs3"),
  threads = 1
)
}
\arguments{
\item{fragments}{IterableFragments object. Only used if step is "prep-inputs" or "all"}

\item{cell_names}{Character vector of cluster assignments for each cell.
Only used if step is "prep-inputs" or "all" Must be same length as cellNames(fragments)}

\item{genome_size}{Numeric of length 1 representing Effective genome size.
Used if step is "prep-inputs", "run-macs", or "all"}

\item{path}{Character vector of length 1 representing parent directory to store MACS inputs and outputs.
Inputs are stored in \verb{<path>/input/} and outputs in \verb{<path>/output/<cluster>/}.}

\item{insertion_mode}{Which fragment ends to use for insertion counts calculation. One of "both", "start_only", or "end_only"}

\item{step}{Which step to run. One of  "all", "prep-inputs", "run-macs", "read-outputs".  If "prep-inputs", create the input bedfiles for macs,
and provides a shell script per cluster with the command to run macs.  If run-macs, also run bash scripts to execute macs.
If read-outputs, read the outputs into tibbles.}

\item{macs_version}{Which version of MACS to use. One of "macs2" or "macs3"  Only used if step is "prep-inputs", "run-macs", or "all"}

\item{threads}{Number of threads to use}
}
\value{
If step is "prep-inputs", returns a shell script to run MACS2/3. If step is "read-outputs" or "all", returns a list of tibbles with peaks for each cluster.
}
\description{
Call MACS2/3 peaks using fragments and cluster assignments.
First creates the input bedfiles for each cluster for input to MACS2/3, then runs MACS2/3, and finally reads the outputs into tibbles.
Also can be used to run only one of these steps.
}
