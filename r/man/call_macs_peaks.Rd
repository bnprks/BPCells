% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/atac_utils.R
\name{call_macs_peaks}
\alias{call_macs_peaks}
\title{Call MACS2/3 peaks using fragments and cluster assignments.}
\usage{
call_macs_peaks(
  fragments,
  cell_groups,
  path,
  effective_genome_size = 2.7e+09,
  insertion_mode = c("start_only", "both", "end_only"),
  step = c("all", "prep-inputs", "run-macs", "read-outputs"),
  macs_version = c("macs3", "macs2"),
  additional_params = "--keep-dup all --shift -75 --extsize 150 --nomodel --nolambda",
  verbose = FALSE,
  use_gz = FALSE,
  threads = 1
)
}
\arguments{
\item{fragments}{IterableFragments object}

\item{cell_groups}{Grouping vector with one entry per cell in fragments, e.g.
cluster IDs}

\item{path}{Character vector of length 1 representing parent directory to store MACS inputs and outputs.
Inputs are stored in \verb{<path>/input/} and outputs in \verb{<path>/output/<cluster>/}.}

\item{effective_genome_size}{effective genome size for MACS. Numeric. Default is 2.7e9.}

\item{insertion_mode}{Which fragment ends to use for coverage calculation. Character. One of \code{both}, \code{start_only}, or \code{end_only}.}

\item{step}{Which step to run. One of  \code{all}, \code{prep-inputs}, \code{run-macs}, \code{read-outputs}.  If \code{prep-inputs}, create the input bed files for macs,
and provides a shell script per cluster with the command to run macs.  If run-macs, also run bash scripts to execute macs.
If read-outputs, read the outputs into tibbles.}

\item{additional_params}{Additional parameters to pass to MACS2/3. Character. Default is \verb{--keep-dup all --shift -75 --extsize 150 --nomodel --nolambda}.}

\item{verbose}{Whether to provide verbose output from MACS. Only used if step is \code{run-macs} or \code{all}. Boolean. Default is FALSE.}

\item{use_gz}{Whether to use gzip compression for bed files. Only used if step is \code{prep-inputs} or \code{all}.  User should
expect that not using gzip would result in sizes of bed files that are 2-3x larger. Boolean. Default is FALSE.}

\item{threads}{Number of threads to use. Integer. Default is 1.}

\item{macs_executable}{Path to either macs3 or macs2 executable. Character. Default is \code{macs3}.}
}
\value{
\itemize{
\item If step is \code{prep-inputs}, script paths for each cluster given as a character vector.
\item If step is \code{run-macs}, return NULL.
\item If step is \code{read-outputs} or \code{all}, returns a tibble with all the peaks from each cluster concatenated.
Columnns are \code{chr}, \code{start}, \code{end}, \code{cluster}, \code{name}, \code{score}, \code{strand}, \code{signalValue}, \code{pValue}, \code{qValue}, \code{pointSource}
}
}
\description{
First creates the input bed files for each cluster for input to MACS2/3, then runs MACS2/3, and finally reads the outputs into tibbles.
Also allows the user to choose whether to run all steps, or only one of the steps.
}
\details{
File format:
\itemize{
\item Inputs are written such that a bed file, as well as a shell file are written for each cluster.
\item Bed files are written at \verb{<path>/input/<cluster>.bed(.gz)}.
\item shell commands are written at \verb{<path>/input/<cluster>.sh}.
}

Outputs are written to an output directory with a subdirectory for each cluster.
Each cluster's output directory contains a file for narrowPeaks, peaks, and summits.
\itemize{
\item NarrowPeaks are written at \verb{<path>/output/<cluster>/<cluster>_peaks.narrowPeak}.
\item Peaks are written at \verb{<path>/output/<cluster>/<cluster>_peaks.xls}.
\item Summits are written at \verb{<path>/output/<cluster>/<cluster>_summits.bed}.
Only the narrowPeaks file is read into a tibble and returned.
}
}
