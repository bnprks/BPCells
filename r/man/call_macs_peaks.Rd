% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/atac_utils.R
\name{call_macs_peaks}
\alias{call_macs_peaks}
\title{Call peaks using MACS2/3}
\usage{
call_macs_peaks(
  fragments,
  path,
  cell_groups = rlang::rep_along(cellNames(fragments), "all"),
  effective_genome_size = 2.7e+09,
  insertion_mode = c("start_only", "both", "end_only"),
  step = c("all", "prep-inputs", "run-macs", "read-outputs"),
  macs_executable = NULL,
  additional_params =
    "--call-summits --keep-dup all --shift -75 --extsize 150 --nomodel --nolambda",
  verbose = FALSE,
  threads = 1
)
}
\arguments{
\item{fragments}{IterableFragments object}

\item{path}{(string) Parent directory to store MACS inputs and outputs.
Inputs are stored in \verb{<path>/input/} and outputs in \verb{<path>/output/<group>/}. See "File format" in details}

\item{cell_groups}{Grouping vector with one entry per cell in fragments, e.g.
cluster IDs}

\item{effective_genome_size}{(numeric) Effective genome size for MACS. Default is \code{2.9e9} following MACS default for GRCh38. See \href{https://deeptools.readthedocs.io/en/develop/content/feature/effectiveGenomeSize.html}{deeptools}
for values for other common genomes.}

\item{insertion_mode}{(string) Which fragment ends to use for coverage calculation. One of \code{both}, \code{start_only}, or \code{end_only}.}

\item{step}{(string) Which step to run. One of  \code{all}, \code{prep-inputs}, \code{run-macs}, \code{read-outputs}.  If \code{prep-inputs}, create the input bed files for macs,
and provides a shell script per cell group with the command to run macs.  If \code{run-macs}, also run bash scripts to execute macs.
If \code{read-outputs}, read the outputs into tibbles.}

\item{macs_executable}{(string) Path to either MACS2/3 executable. Default (\code{NULL}) will autodetect from PATH.}

\item{additional_params}{(string) Additional parameters to pass to MACS2/3.}

\item{verbose}{(bool) Whether to provide verbose output from MACS. Only used if step is \code{run-macs} or \code{all}.}

\item{threads}{(int) Number of threads to use.}
}
\value{
\itemize{
\item If step is \code{prep-inputs}, return script paths for each cell group given as a character vector.
\item If step is \code{run-macs}, return \code{NULL}.
\item If step is \code{read-outputs} or \code{all}, returns a tibble with all the peaks from each cell group concatenated.
Columnns are \code{chr}, \code{start}, \code{end}, \code{group}, \code{name}, \code{score}, \code{strand}, \code{fold_enrichment}, \code{log10_pvalue}, \code{log10_qvalue}, \code{summit_offset}
}
}
\description{
Export pseudobulk bed files as input for MACS, then run MACS and read the output peaks as a tibble.
Each step can can be run independently, allowing for quickly re-loading the results of an already completed call,
or running MACS externally (e.g. via cluster job submisison) for increased parallelization. See details for more information.
}
\details{
\strong{File format}:
\itemize{
\item Inputs are written such that a bed file used as input into MACS,
as well as a shell file containing a call to MACS are written for each cell group.
\item Bed files containing \code{chr}, \code{start}, and \code{end} coordinates of insertions are written at \verb{<path>/input/<group>.bed.gz}.
\item Shell commands to run MACS manually are written at \verb{<path>/input/<group>.sh}.
}

Outputs are written to an output directory with a subdirectory for each cell group.
Each cell group's output directory contains a file for narrowPeaks, peaks, and summits.
\itemize{
\item NarrowPeaks are written at \verb{<path>/output/<group>/<group>_peaks.narrowPeak}.
\item Peaks are written at \verb{<path>/output/<group>/<group>_peaks.xls}.
\item Summits are written at \verb{<path>/output/<group>/<group>_summits.bed}.
}

Only the narrowPeaks file is read into a tibble and returned.
For more information on outputs from MACS, visit the \href{https://macs3-project.github.io/MACS/docs/callpeak.html}{MACS docs}

\strong{Performance}:

Running on a 2600 cell dataset and taking both start and end insertions into account, written input bedfiles and MACS outputs
used 364 MB and 158 MB of space respectively.  With 4 threads, running this function end to end took 74 seconds, with 61 of those seconds spent on running MACS.

\strong{Running MACS manually}:

To run MACS manually, you will first run \code{call_macs_peaks()} with \verb{step="prep-inputs}. Then, manually run all of the
shell scripts generated at \verb{<path>/input/<group>.sh}. Finally, run \code{call_macs_peaks()} again with the same original arguments, but
setting \code{step="read-outputs"}.
}
