% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/transforms.R
\name{normalize_log}
\alias{normalize_log}
\alias{normalize_tfidf}
\title{Normalization helper functions}
\usage{
normalize_log(mat, scale_factor = 10000, threads = 1L)

normalize_tfidf(mat, feature_means = NULL, scale_factor = 10000, threads = 1L)
}
\arguments{
\item{mat}{(IterableMatrix) Counts matrix to normalize. \verb{(features x cells)}}

\item{scale_factor}{(numeric) Scale factor to multiply matrix by for log normalization.}

\item{threads}{(integer) Number of threads to use.}

\item{feature_means}{(numeric, optional) Pre-calculated means of the features to normalize by. If no names are provided, then
each numeric value is assumed to correspond to the feature mean for the corresponding row of the matrix.
Else, map each feature name to its mean value.}
}
\value{
For each element \eqn{x_{ij}} in matrix \eqn{X} with \eqn{i} features and \eqn{j} cells,
transform to a normalized value \eqn{\tilde{x}_{ij}} calculated as:
\itemize{
\item \code{normalize_log}: \eqn{\tilde{x}_{ij} = \log(\frac{x_{ij} \cdot \text{scaleFactor}}{\text{colSum}_j} + 1)}
}

\itemize{
\item \code{normalize_tfidf}: \eqn{\tilde{x}_{ij} = \log(\frac{x_{ij} \cdot \text{scaleFactor}}{\text{rowMean}_i\cdot \text{colSum}_j} + 1)}
}
}
\description{
Apply standard normalizations to a \verb{(features x cells)} counts matrix.
}
\details{
\itemize{
\item \code{normalize_log}: Corresponds to \code{Seurat::NormalizeLog}
}

\itemize{
\item \code{normalize_tfidf}: This follows the formula from Stuart, Butler et al. 2019, used by default in \code{ArchR::addIterativeLSI()} and \code{Signac::RunTFIDF()}
}
}
